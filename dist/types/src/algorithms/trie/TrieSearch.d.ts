import { IndexedDocument, SearchOptions, SearchResult, DocumentContent } from "@/types";
export declare class TrieSearch {
    private root;
    private documents;
    private documentLinks;
    private totalDocuments;
    private maxWordLength;
    constructor(maxWordLength?: number);
    addDocument(document: IndexedDocument): void;
    private indexText;
    private insertWord;
    searchWord(term: string): SearchResult[];
    search(query: string, options?: SearchOptions): SearchResult[];
    private exactSearch;
    private prefixSearch;
    serializeState(): any;
    deserializeState(state: any): void;
    private serializeTrie;
    addData(documentId: string, content: DocumentContent, document: IndexedDocument): void;
    private deserializeTrie;
    private collectWords;
    fuzzySearch(word: string, maxDistance: number): SearchResult[];
    private fuzzySearchRecursive;
    private calculateScore;
    private calculateFuzzyScore;
    private calculateLevenshteinDistance;
    private tokenize;
    removeDocument(documentId: string): void;
    private removeDocumentRefs;
    private pruneEmptyNodes;
    getSuggestions(prefix: string, maxResults?: number): string[];
    private collectSuggestions;
    clear(): void;
}
