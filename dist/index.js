/**
 * @obinexuscomputing/nexus-search v0.2.0
 * High-performance search indexing and query system
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).NexusSearch={})}(this,(function(e){"use strict";class t extends Error{constructor(e){super(e),this.name="SearchError"}}class r extends Error{constructor(e){super(e),this.name="IndexError"}}class n extends Error{constructor(e){super(e),this.name="ValidationError"}}class a extends Error{constructor(e){super(e),this.name="StorageError"}}function s(){return{totalResults:0,searchTime:0,indexSize:0,queryComplexity:0}}class i{constructor(){this.dataMap=new Map}mapData(e,t){this.dataMap.has(e)||this.dataMap.set(e,new Set),this.dataMap.get(e).add(t)}getDocuments(e){return this.dataMap.get(e)||new Set}getAllKeys(){return Array.from(this.dataMap.keys())}exportState(){const e={};return this.dataMap.forEach(((t,r)=>{e[r]=Array.from(t)})),e}importState(e){this.dataMap.clear(),Object.entries(e).forEach((([e,t])=>{this.dataMap.set(e,new Set(t))}))}clear(){this.dataMap.clear()}}class o{constructor(){this.children=new Map,this.isEndOfWord=!1,this.data=new Set}}class c{constructor(){this.root=new o}insert(e,t){let r=this.root;for(const t of e.toLowerCase())r.children.has(t)||r.children.set(t,new o),r=r.children.get(t);r.isEndOfWord=!0,r.data.add(t)}search(e,t=10){const r=new Set;let n=this.root;for(const t of e.toLowerCase()){if(!n.children.has(t))return r;n=n.children.get(t)}return this.collectIds(n,r,t),r}exportState(){return this.serializeNode(this.root)}importState(e){this.root=this.deserializeNode(e)}collectIds(e,t,r){if(e.isEndOfWord)for(const n of e.data){if(t.size>=r)return;t.add(n)}for(const n of e.children.values()){if(t.size>=r)return;this.collectIds(n,t,r)}}fuzzySearch(e,t=2){const r=new Set;return this.fuzzySearchHelper(e.toLowerCase(),this.root,"",t,r),r}fuzzySearchHelper(e,t,r,n,a){if(!(n<0)){if(t.isEndOfWord){this.levenshteinDistance(e,r)<=n&&t.data.forEach((e=>a.add(e)))}for(const[s,i]of t.children)this.fuzzySearchHelper(e,i,r+s,n,a)}}levenshteinDistance(e,t){const r=Array(e.length+1).fill(0).map((()=>Array(t.length+1).fill(0)));for(let t=0;t<=e.length;t++)r[t][0]=t;for(let e=0;e<=t.length;e++)r[0][e]=e;for(let n=1;n<=e.length;n++)for(let a=1;a<=t.length;a++)r[n][a]=Math.min(r[n-1][a]+1,r[n][a-1]+1,r[n-1][a-1]+(e[n-1]!==t[a-1]?1:0));return r[e.length][t.length]}serializeNode(e){const t={};return e.children.forEach(((e,r)=>{t[r]=this.serializeNode(e)})),{isEndOfWord:e.isEndOfWord,data:Array.from(e.data),children:t}}deserializeNode(e){const t=new o;return t.isEndOfWord=e.isEndOfWord,t.data=new Set(e.data),Object.entries(e.children).forEach((([e,r])=>{t.children.set(e,this.deserializeNode(r))})),t}}class d{constructor(){this.dataMapper=new i,this.trieSearch=new c}indexDocument(e,t,r){r.forEach((r=>{const n=e[r];if("string"==typeof n){this.tokenizeText(n).forEach((e=>{this.trieSearch.insert(e,t),this.dataMapper.mapData(e.toLowerCase(),t)}))}}))}search(e,t={}){const{fuzzy:r=!1,maxResults:n=10}=t,a=this.tokenizeText(e),s=new Map;a.forEach((e=>{(r?this.trieSearch.fuzzySearch(e):this.trieSearch.search(e,n)).forEach((t=>{const r=s.get(t)||{score:0,matches:new Set};r.score+=this.calculateScore(t,e),r.matches.add(e),s.set(t,r)}))}));return Array.from(s.entries()).map((([e,{score:t,matches:r}])=>({item:e,score:t/a.length,matches:Array.from(r)}))).sort(((e,t)=>t.score-e.score)).slice(0,n)}exportState(){return{trie:this.trieSearch.exportState(),dataMap:this.dataMapper.exportState()}}importState(e){if(!e||!e.trie||!e.dataMap)throw new Error("Invalid index state");this.trieSearch=new c,this.trieSearch.importState(e.trie),this.dataMapper=new i,this.dataMapper.importState(e.dataMap)}tokenizeText(e){return e.toLowerCase().replace(/[^\w\s]/g," ").split(/\s+/).filter((e=>e.length>0))}calculateScore(e,t){return this.dataMapper.getDocuments(t.toLowerCase()).has(e)?1:.5}clear(){this.trieSearch=new c,this.dataMapper=new i}}function h(e,t){const r={};return t.forEach((t=>{const n=u(e,t);void 0!==n&&(r[t]=l(n))})),r}function l(e){return"string"==typeof e?e.toLowerCase().trim():Array.isArray(e)?e.map((e=>l(e))).join(" "):"object"==typeof e&&null!==e?Object.values(e).map((e=>l(e))).join(" "):String(e)}function u(e,t){return t.split(".").reduce(((e,t)=>e&&void 0!==e[t]?e[t]:void 0),e)}class f{constructor(e){this.config=e,this.indexMapper=new d,this.documents=new Map}async addDocuments(e){e.forEach(((e,t)=>{const r=this.generateDocumentId(t);this.documents.set(r,e);const n=h(e,this.config.fields);this.indexMapper.indexDocument(n,r,this.config.fields)}))}async search(e,t){return this.indexMapper.search(e,{fuzzy:t.fuzzy,maxResults:t.maxResults}).map((e=>({item:this.documents.get(e.item),score:e.score,matches:e.matches})))}exportIndex(){return{documents:Array.from(this.documents.entries()).map((([e,t])=>({key:e,value:JSON.parse(JSON.stringify(t))}))),indexState:this.indexMapper.exportState(),config:JSON.parse(JSON.stringify(this.config))}}importIndex(e){if(!(e&&e.documents&&e.indexState&&e.config))throw new Error("Invalid index data format");try{this.documents=new Map(e.documents.map((e=>[e.key,e.value]))),this.config=e.config,this.indexMapper=new d,this.indexMapper.importState(e.indexState)}catch(e){throw new Error(`Failed to import index: ${e}`)}}clear(){this.documents.clear(),this.indexMapper=new d}generateDocumentId(e){return`${this.config.name}-${e}-${Date.now()}`}}class m{constructor(){this.STOP_WORDS=new Set(["a","an","and","are","as","at","be","by","for","from","has","he","in","is","it","its","of","on","that","the","to","was","were","will","with"])}process(e){const t=this.tokenize(e),r=this.processTokens(t);return this.optimizeQuery(r)}tokenize(e){return e.toLowerCase().split(/\s+/).filter((e=>e.length>0)).map((e=>this.classifyToken(e)))}classifyToken(e){return e.startsWith("+")||e.startsWith("-")?{type:"operator",value:e}:e.includes(":")?{type:"modifier",value:e}:{type:"term",value:e}}processTokens(e){return e.filter((e=>"term"!==e.type||!this.STOP_WORDS.has(e.value))).map((e=>this.normalizeToken(e)))}normalizeToken(e){if("term"===e.type){let t=e.value;return t.endsWith("ing")&&(t=t.slice(0,-3)),t.endsWith("s")&&(t=t.slice(0,-1)),{...e,value:t}}return e}optimizeQuery(e){return e.map((e=>e.value)).join(" ")}}let p,w;const g=new WeakMap,y=new WeakMap,x=new WeakMap,E=new WeakMap,S=new WeakMap;let b={get(e,t,r){if(e instanceof IDBTransaction){if("done"===t)return y.get(e);if("objectStoreNames"===t)return e.objectStoreNames||x.get(e);if("store"===t)return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return D(e[t])},set:(e,t,r)=>(e[t]=r,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function I(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(w||(w=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(M(this),t),D(g.get(this))}:function(...t){return D(e.apply(M(this),t))}:function(t,...r){const n=e.call(M(this),t,...r);return x.set(n,t.sort?t.sort():[t]),D(n)}}function v(e){return"function"==typeof e?I(e):(e instanceof IDBTransaction&&function(e){if(y.has(e))return;const t=new Promise(((t,r)=>{const n=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",s),e.removeEventListener("abort",s)},a=()=>{t(),n()},s=()=>{r(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",a),e.addEventListener("error",s),e.addEventListener("abort",s)}));y.set(e,t)}(e),t=e,(p||(p=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((e=>t instanceof e))?new Proxy(e,b):e);var t}function D(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,r)=>{const n=()=>{e.removeEventListener("success",a),e.removeEventListener("error",s)},a=()=>{t(D(e.result)),n()},s=()=>{r(e.error),n()};e.addEventListener("success",a),e.addEventListener("error",s)}));return t.then((t=>{t instanceof IDBCursor&&g.set(t,e)})).catch((()=>{})),S.set(t,e),t}(e);if(E.has(e))return E.get(e);const t=v(e);return t!==e&&(E.set(e,t),S.set(t,e)),t}const M=e=>S.get(e);function z(e,t,{blocked:r,upgrade:n,blocking:a,terminated:s}={}){const i=indexedDB.open(e,t),o=D(i);return n&&i.addEventListener("upgradeneeded",(e=>{n(D(i.result),e.oldVersion,e.newVersion,D(i.transaction),e)})),r&&i.addEventListener("blocked",(e=>r(e.oldVersion,e.newVersion,e))),o.then((e=>{s&&e.addEventListener("close",(()=>s())),a&&e.addEventListener("versionchange",(e=>a(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),o}const k=["get","getKey","getAll","getAllKeys","count"],O=["put","add","delete","clear"],C=new Map;function N(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(C.get(t))return C.get(t);const r=t.replace(/FromIndex$/,""),n=t!==r,a=O.includes(r);if(!(r in(n?IDBIndex:IDBObjectStore).prototype)||!a&&!k.includes(r))return;const s=async function(e,...t){const s=this.transaction(e,a?"readwrite":"readonly");let i=s.store;return n&&(i=i.index(t.shift())),(await Promise.all([i[r](...t),a&&s.done]))[0]};return C.set(t,s),s}b=(e=>({...e,get:(t,r,n)=>N(t,r)||e.get(t,r,n),has:(t,r)=>!!N(t,r)||e.has(t,r)}))(b);class A{constructor(){this.db=null,this.DB_NAME="nexus_search_db",this.DB_VERSION=1,this.initPromise=null,this.initPromise=this.initialize()}async initialize(){if(!this.db)try{this.db=await z(this.DB_NAME,this.DB_VERSION,{upgrade(e,t,r,n){if(!e.objectStoreNames.contains("searchIndices")){e.createObjectStore("searchIndices",{keyPath:"id"}).createIndex("timestamp","timestamp")}if(!e.objectStoreNames.contains("metadata")){e.createObjectStore("metadata",{keyPath:"id"}).createIndex("lastUpdated","lastUpdated")}},blocked(){console.warn("Database upgrade was blocked")},blocking(){console.warn("Current database version is blocking a newer version")},terminated(){console.error("Database connection was terminated")}})}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Storage initialization failed: ${t}`)}}async ensureConnection(){if(this.initPromise&&await this.initPromise,!this.db)throw new Error("Database connection not available")}async storeIndex(e,t){await this.ensureConnection();try{const r={id:e,data:t,timestamp:Date.now()};await this.db.put("searchIndices",r)}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to store index: ${t}`)}}async getIndex(e){await this.ensureConnection();try{const t=await this.db.get("searchIndices",e);return t?.data||null}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to retrieve index: ${t}`)}}async updateMetadata(e){await this.ensureConnection();try{const t={config:e,lastUpdated:Date.now()};await this.db.put("metadata",{id:"config",...t})}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to update metadata: ${t}`)}}async getMetadata(){await this.ensureConnection();try{return await this.db.get("metadata","config")||null}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to retrieve metadata: ${t}`)}}async clearIndices(){await this.ensureConnection();try{await this.db.clear("searchIndices")}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to clear indices: ${t}`)}}async close(){this.db&&(this.db.close(),this.db=null)}}class B{constructor(e=1e3,t=5){this.cache=new Map,this.maxSize=e,this.ttl=60*t*1e3}set(e,t){this.cache.size>=this.maxSize&&this.evictOldest(),this.cache.set(e,{data:t,timestamp:Date.now()})}get(e){const t=this.cache.get(e);return t?this.isExpired(t.timestamp)?(this.cache.delete(e),null):t.data:null}isExpired(e){return Date.now()-e>this.ttl}evictOldest(){let e=null,t=1/0;for(const[r,n]of this.cache.entries())n.timestamp<t&&(t=n.timestamp,e=r);e&&this.cache.delete(e)}clear(){this.cache.clear()}}function T(e){if(e.maxResults&&e.maxResults<1)throw new Error("maxResults must be greater than 0");if(e.threshold&&(e.threshold<0||e.threshold>1))throw new Error("threshold must be between 0 and 1");if(e.fields&&!Array.isArray(e.fields))throw new Error("fields must be an array")}e.CacheManager=B,e.DEFAULT_INDEX_OPTIONS={caseSensitive:!1,stemming:!0,stopWords:["the","a","an","and","or","but"],minWordLength:2,maxWordLength:50,fuzzyThreshold:.8},e.DEFAULT_SEARCH_OPTIONS={fuzzy:!1,maxResults:10,threshold:.5,fields:[],sortBy:"score",sortOrder:"desc",page:1,pageSize:10},e.DataMapper=i,e.IndexError=r,e.IndexManager=f,e.IndexMapper=d,e.IndexedDB=class{constructor(){this.db=null,this.DB_NAME="nexus_search_db",this.DB_VERSION=1,this.initPromise=null,this.initPromise=this.initialize()}async initialize(){if(!this.db)try{this.db=await z(this.DB_NAME,this.DB_VERSION,{upgrade(e,t,r,n){if(!e.objectStoreNames.contains("searchIndices")){e.createObjectStore("searchIndices",{keyPath:"id"}).createIndex("timestamp","timestamp")}if(!e.objectStoreNames.contains("metadata")){e.createObjectStore("metadata",{keyPath:"id"}).createIndex("lastUpdated","lastUpdated")}},blocked(){console.warn("Database upgrade was blocked")},blocking(){console.warn("Current database version is blocking a newer version")},terminated(){console.error("Database connection was terminated")}})}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Storage initialization failed: ${t}`)}}async ensureConnection(){if(this.initPromise&&await this.initPromise,!this.db)throw new Error("Database connection not available")}async storeIndex(e,t){await this.ensureConnection();try{const r={id:e,data:t,timestamp:Date.now()};await this.db.put("searchIndices",r)}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to store index: ${t}`)}}async getIndex(e){await this.ensureConnection();try{const t=await this.db.get("searchIndices",e);return t?.data||null}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to retrieve index: ${t}`)}}async updateMetadata(e){await this.ensureConnection();try{const t={id:"config",config:e,lastUpdated:Date.now()};await this.db.put("metadata",t)}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to update metadata: ${t}`)}}async getMetadata(){await this.ensureConnection();try{return await this.db.get("metadata","config")||null}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to retrieve metadata: ${t}`)}}async clearIndices(){await this.ensureConnection();try{await this.db.clear("searchIndices")}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to clear indices: ${t}`)}}async deleteIndex(e){await this.ensureConnection();try{await this.db.delete("searchIndices",e)}catch(e){const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Failed to delete index: ${t}`)}}async close(){this.db&&(this.db.close(),this.db=null)}},e.PerformanceMonitor=class{constructor(){this.metrics=new Map}async measure(e,t){const r=performance.now();try{return await t()}finally{const t=performance.now()-r;this.recordMetric(e,t)}}recordMetric(e,t){this.metrics.has(e)||this.metrics.set(e,[]),this.metrics.get(e).push(t)}getMetrics(){const e={};return this.metrics.forEach(((t,r)=>{e[r]={avg:this.average(t),min:Math.min(...t),max:Math.max(...t),count:t.length}})),e}average(e){return e.reduce(((e,t)=>e+t),0)/e.length}clear(){this.metrics.clear()}},e.QueryProcessor=m,e.SearchEngine=class{constructor(e){this.config=e,this.indexManager=new f(e),this.queryProcessor=new m,this.storage=new A,this.cache=new B}async initialize(){try{await this.storage.initialize(),await this.loadIndexes()}catch(e){throw new Error(`Failed to initialize search engine: ${e}`)}}async addDocuments(e){try{await this.indexManager.addDocuments(e),await this.storage.storeIndex(this.config.name,this.indexManager.exportIndex())}catch(e){throw new Error(`Failed to add documents: ${e}`)}}async search(e,t={}){T(t);const r=this.generateCacheKey(e,t),n=this.cache.get(r);if(n)return n;const a=this.queryProcessor.process(e),s=await this.indexManager.search(a,t);return this.cache.set(r,s),s}async loadIndexes(){const e=await this.storage.getIndex(this.config.name);e&&this.indexManager.importIndex(e)}generateCacheKey(e,t){return`${e}-${JSON.stringify(t)}`}async clearIndex(){await this.storage.clearIndices(),this.indexManager.clear(),this.cache.clear()}},e.SearchError=t,e.StorageError=a,e.TrieNode=o,e.TrieSearch=c,e.ValidationError=n,e.createSearchContext=function(e,t={}){return{query:e,options:t,startTime:Date.now(),results:[],stats:{totalResults:0,searchTime:0,indexSize:0,queryComplexity:0}}},e.createSearchStats=s,e.createSearchableFields=h,e.createTokenInfo=function(e,t,r){return{value:e,type:t,position:r,length:e.length}},e.getNestedValue=u,e.isIndexConfig=function(e){return e&&"string"==typeof e.name&&"number"==typeof e.version&&Array.isArray(e.fields)},e.isSearchOptions=function(e){return e&&(void 0===e.fuzzy||"boolean"==typeof e.fuzzy)&&(void 0===e.maxResults||"number"==typeof e.maxResults)},e.isSearchResult=function(e){return e&&"item"in e&&"number"==typeof e.score&&Array.isArray(e.matches)},e.normalizeFieldValue=l,e.optimizeIndex=function(e){return Array.from(new Set(e.map((e=>JSON.stringify(e))))).map((e=>JSON.parse(e))).sort(((e,t)=>JSON.stringify(e).localeCompare(JSON.stringify(t))))},e.validateDocument=function(e,t){return t.every((t=>void 0!==u(e,t)))},e.validateIndexConfig=function(e){if(!e.name)throw new Error("Index name is required");if(!e.version||"number"!=typeof e.version)throw new Error("Valid version number is required");if(!Array.isArray(e.fields)||0===e.fields.length)throw new Error("At least one field must be specified for indexing")},e.validateSearchOptions=T}));
//# sourceMappingURL=index.js.map
