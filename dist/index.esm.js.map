{"version":3,"file":"index.esm.js","sources":["../src/types/errors.ts","../src/types/index.ts","../src/mappers/DataMapper.ts","../src/algorithms/trie/TrieNode.ts","../src/algorithms/trie/TrieSearch.ts","../src/mappers/IndexMapper.ts","../src/utils/SearchUtils.ts","../src/core/IndexManager.ts","../src/core/QueryProcessor.ts","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../src/storage/IndexedDB.ts","../src/storage/CacheManager.ts","../src/utils/ValidationUtils.ts","../src/core/SearchEngine.ts"],"sourcesContent":["export class SearchError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'SearchError';\r\n  }\r\n}\r\n\r\nexport class IndexError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'IndexError';\r\n  }\r\n}\r\n\r\nexport class ValidationError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'ValidationError';\r\n  }\r\n}\r\n\r\nexport class StorageError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'StorageError';\r\n  }\r\n}","\r\n\r\nexport * from './types';\r\nexport * from './errors';\r\nexport * from './events';\r\nexport * from './internal';\r\nexport * from './guards';\r\nexport * from './utils';\r\nexport * from './defaults';\r\n\r\n// Event types implementation\r\nexport type SearchEventType = \r\n  | 'search:start'\r\n  | 'search:complete'\r\n  | 'search:error'\r\n  | 'index:start'\r\n  | 'index:complete'\r\n  | 'index:error'\r\n  | 'storage:error';\r\n\r\nexport interface SearchEvent {\r\n  type: SearchEventType;\r\n  timestamp: number;\r\n  data?: any;\r\n  error?: Error;\r\n}\r\n\r\nexport interface SearchEventListener {\r\n  (event: SearchEvent): void;\r\n}\r\n\r\n// Internal types implementation\r\nexport interface IndexNode {\r\n  id: string;\r\n  value: any;\r\n  score: number;\r\n  children: Map<string, IndexNode>;\r\n}\r\n\r\nexport interface SearchContext {\r\n  query: string;\r\n  options: SearchOptions;\r\n  startTime: number;\r\n  results: SearchResult<any>[];\r\n  stats: SearchStats;\r\n}\r\n\r\nexport interface TokenInfo {\r\n  value: string;\r\n  type: 'word' | 'operator' | 'modifier' | 'delimiter';\r\n  position: number;\r\n  length: number;\r\n}\r\n\r\n// Type guards\r\nexport function isSearchOptions(obj: any): obj is SearchOptions {\r\n  return obj && (\r\n    typeof obj.fuzzy === 'undefined' || typeof obj.fuzzy === 'boolean'\r\n  ) && (\r\n    typeof obj.maxResults === 'undefined' || typeof obj.maxResults === 'number'\r\n  );\r\n}\r\n\r\nexport function isIndexConfig(obj: any): obj is IndexConfig {\r\n  return obj && \r\n    typeof obj.name === 'string' &&\r\n    typeof obj.version === 'number' &&\r\n    Array.isArray(obj.fields);\r\n}\r\n\r\nexport function isSearchResult<T>(obj: any): obj is SearchResult<T> {\r\n  return obj &&\r\n    'item' in obj &&\r\n    typeof obj.score === 'number' &&\r\n    Array.isArray(obj.matches);\r\n}\r\n\r\n// Utility type functions\r\nexport function createSearchStats(): SearchStats {\r\n  return {\r\n    totalResults: 0,\r\n    searchTime: 0,\r\n    indexSize: 0,\r\n    queryComplexity: 0\r\n  };\r\n}\r\n\r\nexport function createSearchContext(\r\n  query: string,\r\n  options: SearchOptions = {}\r\n): SearchContext {\r\n  return {\r\n    query,\r\n    options,\r\n    startTime: Date.now(),\r\n    results: [],\r\n    stats: createSearchStats()\r\n  };\r\n}\r\n\r\nexport function createTokenInfo(\r\n  value: string,\r\n  type: TokenInfo['type'],\r\n  position: number\r\n): TokenInfo {\r\n  return {\r\n    value,\r\n    type,\r\n    position,\r\n    length: value.length\r\n  };\r\n}\r\n\r\n// Default configurations\r\nexport const DEFAULT_INDEX_OPTIONS: Required<IndexOptions> = {\r\n  caseSensitive: false,\r\n  stemming: true,\r\n  stopWords: ['the', 'a', 'an', 'and', 'or', 'but'],\r\n  minWordLength: 2,\r\n  maxWordLength: 50,\r\n  fuzzyThreshold: 0.8\r\n};\r\n\r\nexport const DEFAULT_SEARCH_OPTIONS: Required<SearchOptions> = {\r\n  fuzzy: false,\r\n  maxResults: 10,\r\n  threshold: 0.5,\r\n  fields: [],\r\n  sortBy: 'score',\r\n  sortOrder: 'desc',\r\n  page: 1,\r\n  pageSize: 10\r\n};\r\n\r\n// Export a namespace for internal use\r\nexport namespace NexusSearch {\r\n  export interface InternalConfig extends IndexConfig {\r\n    _id: string;\r\n    _created: number;\r\n    _updated: number;\r\n  }\r\n\r\n  export interface QueryContext extends SearchContext {\r\n    _processed: boolean;\r\n    _cached: boolean;\r\n  }\r\n}\r\nexport interface SearchOptions {\r\n    fuzzy?: boolean;\r\n    maxResults?: number;\r\n    threshold?: number;\r\n    fields?: string[];\r\n    sortBy?: string;\r\n    sortOrder?: 'asc' | 'desc';\r\n    page?: number;\r\n    pageSize?: number;\r\n  }\r\n  \r\n  export interface SearchResult<T> {\r\n    item: T;\r\n    score: number;\r\n    matches: string[];\r\n    highlights?: Record<string, string[]>;\r\n  }\r\n  \r\n  export interface IndexConfig {\r\n    name: string;\r\n    version: number;\r\n    fields: string[];\r\n    options?: IndexOptions;\r\n  }\r\n  \r\n  export interface IndexOptions {\r\n    caseSensitive?: boolean;\r\n    stemming?: boolean;\r\n    stopWords?: string[];\r\n    minWordLength?: number;\r\n    maxWordLength?: number;\r\n    fuzzyThreshold?: number;\r\n  }\r\n  \r\n  export interface SearchStats {\r\n    totalResults: number;\r\n    searchTime: number;\r\n    indexSize: number;\r\n    queryComplexity: number;\r\n  }\r\n\r\n  ","export class DataMapper {\r\n  private dataMap: Map<string, Set<string>>;\r\n\r\n  constructor() {\r\n    this.dataMap = new Map();\r\n  }\r\n\r\n  mapData(key: string, documentId: string): void {\r\n    if (!this.dataMap.has(key)) {\r\n      this.dataMap.set(key, new Set());\r\n    }\r\n    this.dataMap.get(key)!.add(documentId);\r\n  }\r\n\r\n  getDocuments(key: string): Set<string> {\r\n    return this.dataMap.get(key) || new Set();\r\n  }\r\n\r\n  getAllKeys(): string[] {\r\n    return Array.from(this.dataMap.keys());\r\n  }\r\n\r\n  exportState(): Record<string, string[]> {\r\n    const serializedMap: Record<string, string[]> = {};\r\n    \r\n    this.dataMap.forEach((value, key) => {\r\n      serializedMap[key] = Array.from(value);\r\n    });\r\n\r\n    return serializedMap;\r\n  }\r\n\r\n  importState(state: Record<string, string[]>): void {\r\n    this.dataMap.clear();\r\n    \r\n    Object.entries(state).forEach(([key, value]) => {\r\n      this.dataMap.set(key, new Set(value));\r\n    });\r\n  }\r\n\r\n  clear(): void {\r\n    this.dataMap.clear();\r\n  }\r\n}","export class TrieNode {\r\n    children: Map<string, TrieNode>;\r\n    isEndOfWord: boolean;\r\n    data: Set<string>;\r\n    \r\n    constructor() {\r\n      this.children = new Map();\r\n      this.isEndOfWord = false;\r\n      this.data = new Set();\r\n    }\r\n  }\r\n  ","import { TrieNode } from \"./TrieNode\";\r\n\r\ninterface SerializedTrieNode {\r\n  isEndOfWord: boolean;\r\n  data: string[];\r\n  children: { [key: string]: SerializedTrieNode };\r\n}\r\n\r\n\r\nexport class TrieSearch {\r\n  private root: TrieNode;\r\n\r\n  constructor() {\r\n    this.root = new TrieNode();\r\n  }\r\n\r\n  insert(word: string, documentId: string): void {\r\n    let current = this.root;\r\n    \r\n    for (const char of word.toLowerCase()) {\r\n      if (!current.children.has(char)) {\r\n        current.children.set(char, new TrieNode());\r\n      }\r\n      current = current.children.get(char)!;\r\n    }\r\n    \r\n    current.isEndOfWord = true;\r\n    current.data.add(documentId);\r\n  }\r\n\r\n  search(prefix: string, maxResults: number = 10): Set<string> {\r\n    const results = new Set<string>();\r\n    let current = this.root;\r\n\r\n    for (const char of prefix.toLowerCase()) {\r\n      if (!current.children.has(char)) {\r\n        return results;\r\n      }\r\n      current = current.children.get(char)!;\r\n    }\r\n\r\n    this.collectIds(current, results, maxResults);\r\n    return results;\r\n  }\r\n\r\n  exportState(): SerializedTrieNode {\r\n    return this.serializeNode(this.root);\r\n  }\r\n\r\n  importState(state: SerializedTrieNode): void {\r\n    this.root = this.deserializeNode(state);\r\n  }\r\n\r\n  private collectIds(node: TrieNode, results: Set<string>, maxResults: number): void {\r\n    if (node.isEndOfWord) {\r\n      for (const id of node.data) {\r\n        if (results.size >= maxResults) return;\r\n        results.add(id);\r\n      }\r\n    }\r\n\r\n    for (const child of node.children.values()) {\r\n      if (results.size >= maxResults) return;\r\n      this.collectIds(child, results, maxResults);\r\n    }\r\n  }\r\n\r\n  fuzzySearch(word: string, maxDistance: number = 2): Set<string> {\r\n    const results = new Set<string>();\r\n    this.fuzzySearchHelper(word.toLowerCase(), this.root, '', maxDistance, results);\r\n    return results;\r\n  }\r\n\r\n  private fuzzySearchHelper(\r\n    word: string,\r\n    node: TrieNode,\r\n    currentWord: string,\r\n    maxDistance: number,\r\n    results: Set<string>\r\n  ): void {\r\n    if (maxDistance < 0) return;\r\n\r\n    if (node.isEndOfWord) {\r\n      const distance = this.levenshteinDistance(word, currentWord);\r\n      if (distance <= maxDistance) {\r\n        node.data.forEach(id => results.add(id));\r\n      }\r\n    }\r\n\r\n    for (const [char, childNode] of node.children) {\r\n      this.fuzzySearchHelper(\r\n        word,\r\n        childNode,\r\n        currentWord + char,\r\n        maxDistance,\r\n        results\r\n      );\r\n    }\r\n  }\r\n\r\n  private levenshteinDistance(s1: string, s2: string): number {\r\n    const dp: number[][] = Array(s1.length + 1)\r\n      .fill(0)\r\n      .map(() => Array(s2.length + 1).fill(0));\r\n\r\n    for (let i = 0; i <= s1.length; i++) dp[i][0] = i;\r\n    for (let j = 0; j <= s2.length; j++) dp[0][j] = j;\r\n\r\n    for (let i = 1; i <= s1.length; i++) {\r\n      for (let j = 1; j <= s2.length; j++) {\r\n        dp[i][j] = Math.min(\r\n          dp[i - 1][j] + 1,\r\n          dp[i][j - 1] + 1,\r\n          dp[i - 1][j - 1] + (s1[i - 1] !== s2[j - 1] ? 1 : 0)\r\n        );\r\n      }\r\n    }\r\n\r\n    return dp[s1.length][s2.length];\r\n  }\r\n   private serializeNode(node: TrieNode): SerializedTrieNode {\r\n    const children: { [key: string]: SerializedTrieNode } = {};\r\n    \r\n    node.children.forEach((childNode, char) => {\r\n      children[char] = this.serializeNode(childNode);\r\n    });\r\n\r\n    return {\r\n      isEndOfWord: node.isEndOfWord,\r\n      data: Array.from(node.data),\r\n      children\r\n    };\r\n  }\r\n\r\n  private deserializeNode(serialized: SerializedTrieNode): TrieNode {\r\n    const node = new TrieNode();\r\n    node.isEndOfWord = serialized.isEndOfWord;\r\n    node.data = new Set(serialized.data);\r\n\r\n    Object.entries(serialized.children).forEach(([char, childData]) => {\r\n      node.children.set(char, this.deserializeNode(childData));\r\n    });\r\n\r\n    return node;\r\n  }\r\n\r\n}","import { SearchResult } from '../types';\r\nimport { DataMapper } from './DataMapper';\r\nimport { TrieSearch } from '../algorithms/trie/TrieSearch';\r\n\r\nexport class IndexMapper {\r\n  private dataMapper: DataMapper;\r\n  private trieSearch: TrieSearch;\r\n\r\n  constructor() {\r\n    this.dataMapper = new DataMapper();\r\n    this.trieSearch = new TrieSearch();\r\n  }\r\n\r\n  indexDocument(document: any, id: string, fields: string[]): void {\r\n    fields.forEach(field => {\r\n      const value = document[field];\r\n      if (typeof value === 'string') {\r\n        const words = this.tokenizeText(value);\r\n        words.forEach(word => {\r\n          this.trieSearch.insert(word, id);\r\n          this.dataMapper.mapData(word.toLowerCase(), id);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  search(query: string, options: { fuzzy?: boolean; maxResults?: number } = {}): SearchResult<string>[] {\r\n    const { fuzzy = false, maxResults = 10 } = options;\r\n    const searchTerms = this.tokenizeText(query);\r\n    \r\n    const documentScores = new Map<string, { score: number; matches: Set<string> }>();\r\n\r\n    searchTerms.forEach(term => {\r\n      const documentIds = fuzzy\r\n        ? this.trieSearch.fuzzySearch(term)\r\n        : this.trieSearch.search(term, maxResults);\r\n\r\n      documentIds.forEach(id => {\r\n        const current = documentScores.get(id) || { score: 0, matches: new Set<string>() };\r\n        current.score += this.calculateScore(id, term);\r\n        current.matches.add(term);\r\n        documentScores.set(id, current);\r\n      });\r\n    });\r\n\r\n    const results = Array.from(documentScores.entries())\r\n      .map(([id, { score, matches }]) => ({\r\n        item: id,\r\n        score: score / searchTerms.length,\r\n        matches: Array.from(matches)\r\n      }))\r\n      .sort((a, b) => b.score - a.score);\r\n\r\n    return results.slice(0, maxResults);\r\n  }\r\n\r\n  exportState(): any {\r\n    return {\r\n      trie: this.trieSearch.exportState(),\r\n      dataMap: this.dataMapper.exportState()\r\n    };\r\n  }\r\n\r\n  importState(state: any): void {\r\n    if (!state || !state.trie || !state.dataMap) {\r\n      throw new Error('Invalid index state');\r\n    }\r\n\r\n    this.trieSearch = new TrieSearch();\r\n    this.trieSearch.importState(state.trie);\r\n\r\n    this.dataMapper = new DataMapper();\r\n    this.dataMapper.importState(state.dataMap);\r\n  }\r\n\r\n  private tokenizeText(text: string): string[] {\r\n    return text\r\n      .toLowerCase()\r\n      .replace(/[^\\w\\s]/g, ' ')\r\n      .split(/\\s+/)\r\n      .filter(word => word.length > 0);\r\n  }\r\n\r\n  private calculateScore(documentId: string, term: string): number {\r\n    const baseScore = this.dataMapper.getDocuments(term.toLowerCase()).has(documentId) ? 1.0 : 0.5;\r\n    return baseScore\r\n  \r\n  }\r\n  clear(): void {\r\n    this.trieSearch = new TrieSearch();\r\n    this.dataMapper = new DataMapper();\r\n  }\r\n}\r\n","\r\n\r\nexport function createSearchableFields<T>(\r\n  document: T,\r\n  fields: string[]\r\n): Record<string, string> {\r\n  const searchableFields: Record<string, string> = {};\r\n\r\n  fields.forEach(field => {\r\n    const value = getNestedValue(document, field);\r\n    if (value !== undefined) {\r\n      searchableFields[field] = normalizeFieldValue(value);\r\n    }\r\n  });\r\n\r\n  return searchableFields;\r\n}\r\n\r\nexport function normalizeFieldValue(value: any): string {\r\n  if (typeof value === 'string') {\r\n    return value.toLowerCase().trim();\r\n  }\r\n  if (Array.isArray(value)) {\r\n    return value.map(v => normalizeFieldValue(v)).join(' ');\r\n  }\r\n  if (typeof value === 'object' && value !== null) {\r\n    return Object.values(value).map(v => normalizeFieldValue(v)).join(' ');\r\n  }\r\n  return String(value);\r\n}\r\n\r\nexport function getNestedValue(obj: any, path: string): any {\r\n  return path.split('.').reduce((current, key) => \r\n    current && current[key] !== undefined ? current[key] : undefined, \r\n    obj\r\n  );\r\n}\r\n\r\nexport function optimizeIndex(data: any[]): any[] {\r\n  // Remove duplicates\r\n  const uniqueData = Array.from(new Set(data.map(item => \r\n    JSON.stringify(item)\r\n  ))).map(item => JSON.parse(item));\r\n\r\n  // Sort for binary search optimization\r\n  return uniqueData.sort((a, b) => \r\n    JSON.stringify(a).localeCompare(JSON.stringify(b))\r\n  );\r\n}\r\n\r\n","import { IndexMapper } from \"@/mappers/IndexMapper\";\r\nimport { IndexConfig, SearchOptions, SearchResult } from \"@/types\";\r\nimport { createSearchableFields } from \"@/utils/SearchUtils\";\r\n\r\nexport class IndexManager {\r\n    private indexMapper: IndexMapper;\r\n    private config: IndexConfig;\r\n    private documents: Map<string, any>;\r\n  \r\n    constructor(config: IndexConfig) {\r\n      this.config = config;\r\n      this.indexMapper = new IndexMapper();\r\n      this.documents = new Map();\r\n    }\r\n  \r\n    async addDocuments<T>(documents: T[]): Promise<void> {\r\n      documents.forEach((doc, index) => {\r\n        const id = this.generateDocumentId(index);\r\n        this.documents.set(id, doc);\r\n        \r\n        const searchableFields = createSearchableFields(doc, this.config.fields);\r\n        this.indexMapper.indexDocument(searchableFields, id, this.config.fields);\r\n      });\r\n    }\r\n  \r\n    async search<T>(query: string, options: SearchOptions): Promise<SearchResult<T>[]> {\r\n      const searchResults = this.indexMapper.search(query, {\r\n        fuzzy: options.fuzzy,\r\n        maxResults: options.maxResults\r\n      });\r\n  \r\n      return searchResults.map(result => ({\r\n        item: this.documents.get(result.item) as T,\r\n        score: result.score,\r\n        matches: result.matches\r\n      }));\r\n    }\r\n  \r\n    exportIndex(): any {\r\n      // Convert Map to a serializable format and include indexMapper state\r\n      return {\r\n        documents: Array.from(this.documents.entries()).map(([key, value]) => ({\r\n          key,\r\n          value: JSON.parse(JSON.stringify(value)) // Handle potential proxy objects\r\n        })),\r\n        indexState: this.indexMapper.exportState(),\r\n        config: JSON.parse(JSON.stringify(this.config)) // Ensure config is serializable\r\n      };\r\n    }\r\n  \r\n    importIndex(data: any): void {\r\n      if (!data || !data.documents || !data.indexState || !data.config) {\r\n        throw new Error('Invalid index data format');\r\n      }\r\n\r\n      try {\r\n        // Restore documents\r\n        this.documents = new Map(\r\n          data.documents.map((item: any) => [item.key, item.value])\r\n        );\r\n\r\n        // Restore config\r\n        this.config = data.config;\r\n\r\n        // Restore index mapper state\r\n        this.indexMapper = new IndexMapper();\r\n        this.indexMapper.importState(data.indexState);\r\n      } catch (error) {\r\n        throw new Error(`Failed to import index: ${error}`);\r\n      }\r\n    }\r\n  \r\n    clear(): void {\r\n      this.documents.clear();\r\n      this.indexMapper = new IndexMapper();\r\n    }\r\n  \r\n    private generateDocumentId(index: number): string {\r\n      return `${this.config.name}-${index}-${Date.now()}`;\r\n    }\r\n}","type QueryToken = {\r\n  type: 'term' | 'operator' | 'modifier';\r\n  value: string;\r\n};\r\n\r\nexport class QueryProcessor {\r\n  private readonly STOP_WORDS = new Set([\r\n    'a', 'an', 'and', 'are', 'as', 'at', 'be', 'by', 'for',\r\n    'from', 'has', 'he', 'in', 'is', 'it', 'its', 'of', 'on',\r\n    'that', 'the', 'to', 'was', 'were', 'will', 'with'\r\n  ]);\r\n\r\n  process(query: string): string {\r\n    const tokens = this.tokenize(query);\r\n    const processedTokens = this.processTokens(tokens);\r\n    return this.optimizeQuery(processedTokens);\r\n  }\r\n\r\n  private tokenize(query: string): QueryToken[] {\r\n    return query\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter(term => term.length > 0)\r\n      .map(term => this.classifyToken(term));\r\n  }\r\n\r\n  private classifyToken(term: string): QueryToken {\r\n    if (term.startsWith('+') || term.startsWith('-')) {\r\n      return { type: 'operator', value: term };\r\n    }\r\n    if (term.includes(':')) {\r\n      return { type: 'modifier', value: term };\r\n    }\r\n    return { type: 'term', value: term };\r\n  }\r\n\r\n  private processTokens(tokens: QueryToken[]): QueryToken[] {\r\n    return tokens\r\n      .filter(token => \r\n        token.type !== 'term' || !this.STOP_WORDS.has(token.value)\r\n      )\r\n      .map(token => this.normalizeToken(token));\r\n  }\r\n\r\n  private normalizeToken(token: QueryToken): QueryToken {\r\n    if (token.type === 'term') {\r\n      // Basic stemming (could be enhanced with proper stemming algorithm)\r\n      let value = token.value;\r\n      if (value.endsWith('ing')) value = value.slice(0, -3);\r\n      if (value.endsWith('s')) value = value.slice(0, -1);\r\n      return { ...token, value };\r\n    }\r\n    return token;\r\n  }\r\n\r\n  private optimizeQuery(tokens: QueryToken[]): string {\r\n    return tokens\r\n      .map(token => token.value)\r\n      .join(' ');\r\n  }\r\n}","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","\r\n\r\nimport { openDB, DBSchema, IDBPDatabase } from 'idb';\r\nimport { IndexConfig } from '../types';\r\n\r\ninterface SearchDBSchema extends DBSchema {\r\n  searchIndices: {\r\n    key: string;\r\n    value: {\r\n      id: string;\r\n      data: any;\r\n      timestamp: number;\r\n    };\r\n  };\r\n  metadata: {\r\n    key: string;\r\n    value: MetadataEntry;\r\n  };\r\n}\r\n\r\ninterface MetadataEntry {\r\n  config: IndexConfig;\r\n  lastUpdated: number;\r\n}\r\n\r\nexport class SearchStorage {\r\n  private db: IDBPDatabase<SearchDBSchema> | null = null;\r\n  private readonly DB_NAME = 'nexus_search_db';\r\n  private readonly DB_VERSION = 1;\r\n  private initPromise: Promise<void> | null = null;\r\n\r\n  constructor() {\r\n    // Initialize immediately to catch early failures\r\n    this.initPromise = this.initialize();\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    if (this.db) return;\r\n\r\n    try {\r\n      this.db = await openDB<SearchDBSchema>(this.DB_NAME, this.DB_VERSION, {\r\n        upgrade(db, oldVersion, newVersion, transaction) {\r\n          // Handle version upgrades\r\n          if (!db.objectStoreNames.contains('searchIndices')) {\r\n            const indexStore = db.createObjectStore('searchIndices', { keyPath: 'id' });\r\n            indexStore.createIndex('timestamp', 'timestamp');\r\n          }\r\n\r\n          if (!db.objectStoreNames.contains('metadata')) {\r\n            const metaStore = db.createObjectStore('metadata', { keyPath: 'id' });\r\n            metaStore.createIndex('lastUpdated', 'lastUpdated');\r\n          }\r\n        },\r\n        blocked() {\r\n          console.warn('Database upgrade was blocked');\r\n        },\r\n        blocking() {\r\n          console.warn('Current database version is blocking a newer version');\r\n        },\r\n        terminated() {\r\n          console.error('Database connection was terminated');\r\n        }\r\n      });\r\n    } catch (error) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Storage initialization failed: ${message}`);\r\n    }\r\n  }\r\n\r\n  private async ensureConnection(): Promise<void> {\r\n    if (this.initPromise) {\r\n      await this.initPromise;\r\n    }\r\n    \r\n    if (!this.db) {\r\n      throw new Error('Database connection not available');\r\n    }\r\n  }\r\n\r\n  async storeIndex(key: string, data: any): Promise<void> {\r\n    await this.ensureConnection();\r\n    \r\n    try {\r\n      const entry = {\r\n        id: key,\r\n        data,\r\n        timestamp: Date.now(),\r\n      };\r\n\r\n      await this.db!.put('searchIndices', entry);\r\n    } catch (error) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to store index: ${message}`);\r\n    }\r\n  }\r\n\r\n  async getIndex(key: string): Promise<any | null> {\r\n    await this.ensureConnection();\r\n    \r\n    try {\r\n      const entry = await this.db!.get('searchIndices', key);\r\n      return entry?.data || null;\r\n    } catch (error) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to retrieve index: ${message}`);\r\n    }\r\n  }\r\n\r\n  async updateMetadata(config: IndexConfig): Promise<void> {\r\n    await this.ensureConnection();\r\n    \r\n    try {\r\n      const metadata: MetadataEntry = {\r\n        config,\r\n        lastUpdated: Date.now()\r\n      };\r\n      \r\n      await this.db!.put('metadata', { id: 'config', ...metadata });\r\n    } catch (error) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to update metadata: ${message}`);\r\n    }\r\n  }\r\n\r\n  async getMetadata(): Promise<MetadataEntry | null> {\r\n    await this.ensureConnection();\r\n    \r\n    try {\r\n      const result = await this.db!.get('metadata', 'config');\r\n      return result || null; // Return `null` if `result` is `undefined`\r\n    } catch (error) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to retrieve metadata: ${message}`);\r\n    }\r\n  }\r\n\r\n  async clearIndices(): Promise<void> {\r\n    await this.ensureConnection();\r\n    \r\n    try {\r\n      await this.db!.clear('searchIndices');\r\n    } catch (error) {\r\n      const message = error instanceof Error ? error.message : 'Unknown error';\r\n      throw new Error(`Failed to clear indices: ${message}`);\r\n    }\r\n  }\r\n\r\n  async close(): Promise<void> {\r\n    if (this.db) {\r\n      this.db.close();\r\n      this.db = null;\r\n    }\r\n  }\r\n}\r\n","import { SearchResult } from '../types';\r\n\r\nexport class CacheManager {\r\n  private cache: Map<string, { data: SearchResult<any>[]; timestamp: number }>;\r\n  private readonly maxSize: number;\r\n  private readonly ttl: number; // Time to live in milliseconds\r\n\r\n  constructor(maxSize: number = 1000, ttlMinutes: number = 5) {\r\n    this.cache = new Map();\r\n    this.maxSize = maxSize;\r\n    this.ttl = ttlMinutes * 60 * 1000;\r\n  }\r\n\r\n  set(key: string, data: SearchResult<any>[]): void {\r\n    if (this.cache.size >= this.maxSize) {\r\n      this.evictOldest();\r\n    }\r\n\r\n    this.cache.set(key, {\r\n      data,\r\n      timestamp: Date.now(),\r\n    });\r\n  }\r\n\r\n  get(key: string): SearchResult<any>[] | null {\r\n    const entry = this.cache.get(key);\r\n    \r\n    if (!entry) return null;\r\n    \r\n    if (this.isExpired(entry.timestamp)) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n\r\n    return entry.data;\r\n  }\r\n\r\n  private isExpired(timestamp: number): boolean {\r\n    return Date.now() - timestamp > this.ttl;\r\n  }\r\n\r\n  private evictOldest(): void {\r\n    let oldestKey: string | null = null;\r\n    let oldestTime = Infinity;\r\n\r\n    for (const [key, entry] of this.cache.entries()) {\r\n      if (entry.timestamp < oldestTime) {\r\n        oldestTime = entry.timestamp;\r\n        oldestKey = key;\r\n      }\r\n    }\r\n\r\n    if (oldestKey) {\r\n      this.cache.delete(oldestKey);\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear();\r\n  }\r\n}","import { SearchOptions, IndexConfig } from '@types';\r\nimport { getNestedValue } from './SearchUtils';\r\n\r\nexport function validateSearchOptions(options: SearchOptions): void {\r\n  if (options.maxResults && options.maxResults < 1) {\r\n    throw new Error('maxResults must be greater than 0');\r\n  }\r\n\r\n  if (options.threshold && (options.threshold < 0 || options.threshold > 1)) {\r\n    throw new Error('threshold must be between 0 and 1');\r\n  }\r\n\r\n  if (options.fields && !Array.isArray(options.fields)) {\r\n    throw new Error('fields must be an array');\r\n  }\r\n}\r\n\r\nexport function validateIndexConfig(config: IndexConfig): void {\r\n  if (!config.name) {\r\n    throw new Error('Index name is required');\r\n  }\r\n\r\n  if (!config.version || typeof config.version !== 'number') {\r\n    throw new Error('Valid version number is required');\r\n  }\r\n\r\n  if (!Array.isArray(config.fields) || config.fields.length === 0) {\r\n    throw new Error('At least one field must be specified for indexing');\r\n  }\r\n}\r\n\r\nexport function validateDocument(document: any, fields: string[]): boolean {\r\n  return fields.every(field => {\r\n    const value = getNestedValue(document, field);\r\n    return value !== undefined;\r\n  });\r\n}","import { SearchOptions, SearchResult, IndexConfig } from '../types';\r\nimport { IndexManager } from './IndexManager';\r\nimport { QueryProcessor } from './QueryProcessor';\r\nimport { SearchStorage } from '../storage/IndexedDB';\r\nimport { CacheManager } from '../storage/CacheManager';\r\nimport { validateSearchOptions } from '@/utils/ValidationUtils';\r\n\r\nexport class SearchEngine {\r\n  private indexManager: IndexManager;\r\n  private queryProcessor: QueryProcessor;\r\n  private storage: SearchStorage;\r\n  private cache: CacheManager;\r\n  private config: IndexConfig;\r\n\r\n  constructor(config: IndexConfig) {\r\n    this.config = config;\r\n    this.indexManager = new IndexManager(config);\r\n    this.queryProcessor = new QueryProcessor();\r\n    this.storage = new SearchStorage();\r\n    this.cache = new CacheManager();\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    try {\r\n      await this.storage.initialize();\r\n      await this.loadIndexes();\r\n    } catch (error) {\r\n      throw new Error(`Failed to initialize search engine: ${error}`);\r\n    }\r\n  }\r\n\r\n  async addDocuments<T>(documents: T[]): Promise<void> {\r\n    try {\r\n      await this.indexManager.addDocuments(documents);\r\n      await this.storage.storeIndex(this.config.name, this.indexManager.exportIndex());\r\n    } catch (error) {\r\n      throw new Error(`Failed to add documents: ${error}`);\r\n    }\r\n  }\r\n\r\n  async search<T>(query: string, options: SearchOptions = {}): Promise<SearchResult<T>[]> {\r\n    validateSearchOptions(options);\r\n    \r\n    const cacheKey = this.generateCacheKey(query, options);\r\n    const cachedResults = this.cache.get(cacheKey);\r\n    \r\n    if (cachedResults) {\r\n      return cachedResults as SearchResult<T>[];\r\n    }\r\n\r\n    const processedQuery = this.queryProcessor.process(query);\r\n    const results = await this.indexManager.search<T>(processedQuery, options);\r\n    \r\n    this.cache.set(cacheKey, results);\r\n    return results;\r\n  }\r\n\r\n  private async loadIndexes(): Promise<void> {\r\n    const storedIndex = await this.storage.getIndex(this.config.name);\r\n    if (storedIndex) {\r\n      this.indexManager.importIndex(storedIndex);\r\n    }\r\n  }\r\n\r\n  private generateCacheKey(query: string, options: SearchOptions): string {\r\n    return `${query}-${JSON.stringify(options)}`;\r\n  }\r\n\r\n  async clearIndex(): Promise<void> {\r\n    await this.storage.clearIndices();\r\n    this.indexManager.clear();\r\n    this.cache.clear();\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","x_google_ignoreList":[9,10]}